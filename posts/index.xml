<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>所有文章 - </title>
        <link>https://blog.silasblog.top/posts/</link>
        <description>所有文章 | </description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Fri, 14 Oct 2022 18:44:50 &#43;0800</lastBuildDate><atom:link href="https://blog.silasblog.top/posts/" rel="self" type="application/rss+xml" /><item>
    <title>侯捷 C&#43;&#43;11&amp;14 课程笔记</title>
    <link>https://blog.silasblog.top/%E4%BE%AF%E6%8D%B7-c-1114-%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/</link>
    <pubDate>Fri, 14 Oct 2022 18:44:50 &#43;0800</pubDate><author>
        <name>Silas</name>
    </author><guid>https://blog.silasblog.top/%E4%BE%AF%E6%8D%B7-c-1114-%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/</guid>
    <description><![CDATA[前言本文是我看侯捷老师C++11课程视频做的简短的笔记，主要便于后续复习，做笔记的思路来源于 侯捷——C++面向对象高级开发（上）（面向对象程]]></description>
</item><item>
    <title>CMU15-445 - Project1 Buffer Pool</title>
    <link>https://blog.silasblog.top/cmu15-445-project1-buffer-pool/</link>
    <pubDate>Wed, 12 Oct 2022 09:30:09 &#43;0800</pubDate><author>
        <name>Silas</name>
    </author><guid>https://blog.silasblog.top/cmu15-445-project1-buffer-pool/</guid>
    <description><![CDATA[前言我做的是 CMU15-445 2022年秋季版本，目前课程尚未完结，poject和 gradescope 也在慢慢开放中，目前我的进度到Project1 buffer pool，这篇总结一下我]]></description>
</item><item>
    <title>CMU15-445: Project0-字典树</title>
    <link>https://blog.silasblog.top/cmu15-445-project0-%E5%AD%97%E5%85%B8%E6%A0%91/</link>
    <pubDate>Fri, 16 Sep 2022 17:46:55 &#43;0800</pubDate><author>
        <name>Silas</name>
    </author><guid>https://blog.silasblog.top/cmu15-445-project0-%E5%AD%97%E5%85%B8%E6%A0%91/</guid>
    <description><![CDATA[前言PROJECT #0 - C++ PRIMER：是要求实现一个支持并发插入键值对的字典树，如果堆字典树不了解可以先看一下 Leetcode 这道题 208. 实现 Trie (前缀树) 写这]]></description>
</item><item>
    <title>CS144-2021 lab2</title>
    <link>https://blog.silasblog.top/cs144-2021-lab2/</link>
    <pubDate>Mon, 01 Aug 2022 21:31:39 &#43;0800</pubDate><author>
        <name>Silas</name>
    </author><guid>https://blog.silasblog.top/cs144-2021-lab2/</guid>
    <description><![CDATA[lab2 主要是实现 TCPReceiver，就是将接收到的 TCPSegment （TCP报文段）写入到我们之前实现的流当中 3.1 Translating between 64-bit indexes and 32-bit seqnos我们在lab1实现的]]></description>
</item><item>
    <title>MIT6S.081-Lab9 File system</title>
    <link>https://blog.silasblog.top/mit6s.081-lab9-file-system/</link>
    <pubDate>Sat, 30 Jul 2022 17:07:17 &#43;0800</pubDate><author>
        <name>Silas</name>
    </author><guid>https://blog.silasblog.top/mit6s.081-lab9-file-system/</guid>
    <description><![CDATA[Large files这个部分是要拓展xv6原来的文件系统，本来的inode是一级的，addrs数组中最后一个元素对应一个间接引用节点的地址，这个节点]]></description>
</item><item>
    <title>CS144-2021: lab1</title>
    <link>https://blog.silasblog.top/cs144-2021-lab1/</link>
    <pubDate>Tue, 26 Jul 2022 17:59:26 &#43;0800</pubDate><author>
        <name>Silas</name>
    </author><guid>https://blog.silasblog.top/cs144-2021-lab1/</guid>
    <description><![CDATA[lab1 StreamReassembler这个 lab 是为了将得到不同的字节流重新组合得到完整的连续的字节信息，我们知道tcp在传输过程中不是将一大段报]]></description>
</item><item>
    <title>CS144-2021: lab0</title>
    <link>https://blog.silasblog.top/cs144-2021-lab0/</link>
    <pubDate>Sun, 24 Jul 2022 19:57:48 &#43;0800</pubDate><author>
        <name>Silas</name>
    </author><guid>https://blog.silasblog.top/cs144-2021-lab0/</guid>
    <description><![CDATA[关于现代 C++，CS144建议以下几点： Use the language documentation at https://en.cppreference.com as a resource. Never use malloc() or free(). Never use new or delete. Essentially never use raw pointers (*), and use “smart” pointers (unique ptr or shared ptr) only when necessary(You will not need to use these in]]></description>
</item><item>
    <title>MIT6S.081-Lab6: Multithreading</title>
    <link>https://blog.silasblog.top/mit6s.081-lab6-multithreading/</link>
    <pubDate>Sun, 24 Jul 2022 16:08:22 &#43;0800</pubDate><author>
        <name>Silas</name>
    </author><guid>https://blog.silasblog.top/mit6s.081-lab6-multithreading/</guid>
    <description><![CDATA[Uthread: switching between threads这个实验主要是让我们了解线程上下文切换需要做的哪些内容 大部分内容都可以参照内核态的进程进行上下文切换时保存的寄存器 首先在]]></description>
</item><item>
    <title>MIT6S.081-Lab4: traps</title>
    <link>https://blog.silasblog.top/mit6s.081-lab4-traps/</link>
    <pubDate>Wed, 20 Jul 2022 13:41:54 &#43;0800</pubDate><author>
        <name>Silas</name>
    </author><guid>https://blog.silasblog.top/mit6s.081-lab4-traps/</guid>
    <description><![CDATA[RISC-V assembly 哪些寄存器保存函数的参数？例如，在main对printf的调用中，哪个寄存器保存13？ a0-a7 中存放参数，a2 保存了 13 main的汇编代码中对函]]></description>
</item><item>
    <title>MIT6S.081-Lab3: page tables</title>
    <link>https://blog.silasblog.top/mit6s.081-lab3-page-tables/</link>
    <pubDate>Tue, 19 Jul 2022 22:14:30 &#43;0800</pubDate><author>
        <name>Silas</name>
    </author><guid>https://blog.silasblog.top/mit6s.081-lab3-page-tables/</guid>
    <description><![CDATA[Speed up system calls最开始参考实验部分的是课程介绍 · 6.S081 All-In-One，做完打印页表实验后发现没法通过，然后反应过来这个中文翻译是基于xv6]]></description>
</item></channel>
</rss>
